{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //import { toggleTap, incrementCount, decrementCount } from '../redux/actions';\n\nimport HeroBanner from \"../components/herobanner\";\nimport GlobalStyles from \"../styles/styles.scss\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    // toggle = () => {\n    // \tconst { toggleTap } = this.props\n    // \ttoggleTap()\n    // }\n    // increment = () => {\n    // \tconst { incrementCount } = this.props\n    // \tincrementCount()\n    // }\n    // decrement = () => {\n    // \tconst { decrementCount } = this.props\n    // \tdecrementCount()\n    // }\n    value: function render() {\n      var _this$props = this.props,\n          tap = _this$props.tap,\n          count = _this$props.count;\n      return React.createElement(\"section\", null, React.createElement(HeroBanner, {\n        text: \"Joe Biggica\"\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var reduxStore = _ref.reduxStore,\n          req = _ref.req;\n      var isServer = !!req;\n      return {};\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tap: state.tap,\n    count: state.count\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    toggleTap: toggleTap,\n    incrementCount: incrementCount,\n    decrementCount: decrementCount\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/reuters/Engineering/Biggica/pages/Index.js"],"names":["Component","connect","bindActionCreators","HeroBanner","GlobalStyles","Index","props","tap","count","reduxStore","req","isServer","mapStateToProps","state","mapDispatchToProps","dispatch","toggleTap","incrementCount","decrementCount"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CACA;;AACA,OAAOC,UAAP;AAEA,OAAOC,YAAP;;IAEMC,K;;;;;;;;;;;;;AAOL;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;6BAES;AAAA,wBACe,KAAKC,KADpB;AAAA,UACAC,GADA,eACAA,GADA;AAAA,UACKC,KADL,eACKA,KADL;AAGR,aACC,qCACC,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC;AAAjB,QADD,CADD;AAKA;;;0CA7B4C;AAAA,UAAnBC,UAAmB,QAAnBA,UAAmB;AAAA,UAAPC,GAAO,QAAPA,GAAO;AAC5C,UAAMC,QAAQ,GAAG,CAAC,CAACD,GAAnB;AAEA,aAAO,EAAP;AACA;;;;EALkBV,S;;AAiCpB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AACNN,IAAAA,GAAG,EAAEM,KAAK,CAACN,GADL;AAENC,IAAAA,KAAK,EAAEK,KAAK,CAACL;AAFP,GAAP;AAIA,CALD;;AAOA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAClCb,kBAAkB,CAAC;AAAEc,IAAAA,SAAS,EAATA,SAAF;AAAaC,IAAAA,cAAc,EAAdA,cAAb;AAA6BC,IAAAA,cAAc,EAAdA;AAA7B,GAAD,EAAgDH,QAAhD,CADgB;AAAA,CAAnC;;AAGA,eAAed,OAAO,CACrBW,eADqB,EAErBE,kBAFqB,CAAP,CAGbT,KAHa,CAAf","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n//import { toggleTap, incrementCount, decrementCount } from '../redux/actions';\nimport HeroBanner from 'components/herobanner';\n\nimport GlobalStyles from 'styles/styles.scss';\n\nclass Index extends Component {\n\tstatic getInitialProps ({ reduxStore, req }) {\n\t\tconst isServer = !!req\n\n\t\treturn {}\n\t}\n\n\t// toggle = () => {\n\t// \tconst { toggleTap } = this.props\n\t// \ttoggleTap()\n\t// }\n\n\t// increment = () => {\n\t// \tconst { incrementCount } = this.props\n\t// \tincrementCount()\n\t// }\n\n\t// decrement = () => {\n\t// \tconst { decrementCount } = this.props\n\t// \tdecrementCount()\n\t// }\n\n\trender() {\n\t\tconst { tap, count } = this.props;\n\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<HeroBanner text='Joe Biggica' />\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttap: state.tap,\n\t\tcount: state.count\n\t}\n}\n\nconst mapDispatchToProps = dispatch =>\n\tbindActionCreators({ toggleTap, incrementCount, decrementCount }, dispatch)\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Index);\n"]},"metadata":{},"sourceType":"module"}